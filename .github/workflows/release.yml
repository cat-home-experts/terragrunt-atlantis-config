name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    name: Create Release
    runs-on: "ubuntu-latest"

    steps:
      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18'
      # Install external go modules before cloning
      - run: go install github.com/laher/goxc@latest
      # Checkout code
      - uses: actions/checkout@v2
      # Install golang deps, using a cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ubuntu-latest-1.18-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ubuntu-latest-1.18-go-
      - name: Get the tag version
        id: get_versions
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "TASK_VERSION=$(cat .tool-versions | grep 'task ' | cut -d ' ' -f2)" >> $GITHUB_ENV
      - name: 'Install asdf dependencies'
        uses: asdf-vm/actions/setup@v1
      - name: 'Install Task'
        uses: arduino/setup-task@v1
        with:
          version: ${{ env.TASK_VERSION }}
      # build binaries for all supported environments
      - name: Build and sign
        run: |
          set -e
          task sign
        env:
          TAG_VERSION: ${{ env.VERSION }}
      # Create the release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            build/${{ env.VERSION }}/*
